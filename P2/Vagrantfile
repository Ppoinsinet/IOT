# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configcures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|

  config.vm.box = "generic/alpine312"

  config.vm.provider "virtualbox" do |hv|
    hv.cpus = "1"
    hv.memory = "2048"
  end

  config.vm.network :forwarded_port, guest: 80, host: 80, guest_ip: "192.168.56.110"

  config.vm.synced_folder 'src', '/vagrant'

  config.ssh.password = "vagrant"


  config.vm.define "ppoinsinS" do |host1|
    host1.vm.hostname = "ppoinsinS"
    host1.vm.network "private_network", ip: "192.168.56.110"

    host1.vm.provision "start-k3s-server", type: "shell", inline:<<-SHELL
    curl -sfL https://get.k3s.io | INSTALL_K3S_EXEC="--node-ip 192.168.56.110" sh -
    SHELL

    host1.vm.provision "wait-k3s-start", after: "start-k3s-server", type: "shell", inline:<<-SHELL
    while [ ! -f /var/lib/rancher/k3s/server/node-token ] ;
    do
          sleep 2
    done
    sleep 2
    SHELL

    host1.vm.provision "start-apps", after: "wait-k3s-start", type: "shell", inline:<<-SHELL

    kubectl create -f /vagrant/app-one.yml
    kubectl create -f /vagrant/app-two.yml
    kubectl create -f /vagrant/app-three.yml

    kubectl apply -f /vagrant/ingress.yml

      
    SHELL
    
  end



  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  # config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
  #   vb.memory = "1024"
  # end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Enable provisioning with a shell script. Additional provisioners such as
  # Ansible, Chef, Docker, Puppet and Salt are also available. Please see the
  # documentation for more information about their specific syntax and use.
  # config.vm.provision "shell", inline: <<-SHELL
  #   apt-get update
  #   apt-get install -y apache2
  # SHELL
end
